# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-06-24 16:49
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import perma_payments.models
import uuid


def handle_existing_subscriptions(apps, schema_editor):
    """
    Populate the new SubscriptionAgreement fields where appropriate
    """
    SubscriptionAgreement = apps.get_model('perma_payments', 'SubscriptionAgreement')
    subscriptions_ever_current = SubscriptionAgreement.objects.filter(
        status__in=[
            'Canceled',
            'Completed',
            'Current',
            'Hold',
            'Superseded'
        ]
    )
    for sa in subscriptions_ever_current:
        # get these fields' values from the subscription request,
        # like happens now upon receiving CyberSource's callback
        sa.current_link_limit = sa.subscription_request.link_limit
        sa.current_frequency = sa.subscription_request.recurring_frequency
        sa.current_rate = sa.subscription_request.recurring_amount
        # use the subscription agreement's creation date as a proxy for this
        sa.current_link_limit_effective_timestamp = sa.created_date
        sa.save()
class Migration(migrations.Migration):

    replaces = [('perma_payments', '0001_initial'), ('perma_payments', '0002_updaterequestresponse'), ('perma_payments', '0003_auto_20170818_1735'), ('perma_payments', '0004_subscriptionrequest_recurring_start_date'), ('perma_payments', '0005_auto_20170913_1439'), ('perma_payments', '0006_auto_20170926_1957'), ('perma_payments', '0007_auto_20170926_2048'), ('perma_payments', '0008_auto_20170926_2051'), ('perma_payments', '0009_auto_20170926_2053'), ('perma_payments', '0010_auto_20171102_1931'), ('perma_payments', '0011_auto_20171114_2057'), ('perma_payments', '0012_auto_20180828_1625'), ('perma_payments', '0013_auto_20181126_2214'), ('perma_payments', '0014_auto_20181127_1631'), ('perma_payments', '0015_auto_20181129_2148'), ('perma_payments', '0016_populate_new_sa_fields'), ('perma_payments', '0017_purchaserequest_purchaserequestresponse')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='OutgoingTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_uuid', models.UUIDField(default=uuid.uuid4, help_text="A unique ID for this 'transaction'. Intended to protect against duplicate transactions.")),
                ('request_datetime', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('decision', models.CharField(choices=[('ACCEPT', 'ACCEPT'), ('REVIEW', 'REVIEW'), ('DECLINE', 'DECLINE'), ('ERROR', 'ERROR'), ('CANCEL', 'CANCEL')], max_length=7, null=True)),
                ('reason_code', models.IntegerField(null=True)),
                ('message', models.TextField(null=True)),
                ('full_response', models.BinaryField(help_text='The full response, encrypted, in case we ever need it.', null=True)),
                ('encryption_key_id', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registrar', models.IntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Rejected', 'Rejected'), ('Aborted', 'Aborted'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed'), ('Current', 'Current'), ('Hold', 'Hold'), ('Superseded', 'Superseded')], max_length=20)),
                ('status_updated', models.DateTimeField(auto_now=True)),
                ('cancellation_requested', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionRequest',
            fields=[
                ('outgoingtransaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.OutgoingTransaction')),
                ('reference_number', models.CharField(default=perma_payments.models.generate_reference_number, help_text="Unqiue ID for this subscription. Subsequent charges, automatically made byCyberSource onthe recurring schedule, will all be associated with this reference number. Called 'Merchant Reference Number' in CyberSource Business Center.", max_length=32)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount to be charged immediately', max_digits=19)),
                ('recurring_amount', models.DecimalField(decimal_places=2, help_text='Amount to be charged repeatedly, beginning on recurring_start_date', max_digits=19)),
                ('recurring_frequency', models.CharField(choices=[('weekly', 'weekly'), ('bi-weekly', 'bi-weekly'), ('quad-weekly', 'quad-weekly'), ('monthly', 'monthly'), ('semi-monthly', 'semi-monthly'), ('quarterly', 'quarterly'), ('semi-annually', 'semi-annually'), ('annually', 'annually')], max_length=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('locale', models.CharField(default='en-us', max_length=5)),
                ('payment_method', models.CharField(default='card', max_length=30)),
                ('transaction_type', models.CharField(default='sale,create_payment_token', max_length=30)),
                ('subscription_agreement', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_request', to='perma_payments.SubscriptionAgreement')),
            ],
            options={
                'abstract': False,
            },
            bases=('perma_payments.outgoingtransaction',),
        ),
        migrations.CreateModel(
            name='SubscriptionRequestResponse',
            fields=[
                ('response_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.Response')),
                ('payment_token', models.CharField(blank=True, default='', max_length=26)),
                ('related_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_request_response', to='perma_payments.SubscriptionRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('perma_payments.response',),
        ),
        migrations.CreateModel(
            name='UpdateRequest',
            fields=[
                ('outgoingtransaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.OutgoingTransaction')),
                ('transaction_type', models.CharField(default='update_payment_token', max_length=30)),
                ('subscription_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='update_request', to='perma_payments.SubscriptionAgreement')),
            ],
            options={
                'abstract': False,
            },
            bases=('perma_payments.outgoingtransaction',),
        ),
        migrations.AddField(
            model_name='response',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_perma_payments.response_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='outgoingtransaction',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_perma_payments.outgoingtransaction_set+', to='contenttypes.ContentType'),
        ),
        migrations.CreateModel(
            name='UpdateRequestResponse',
            fields=[
                ('response_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.Response')),
                ('related_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='update_request_response', to='perma_payments.UpdateRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('perma_payments.response',),
        ),
        migrations.AddField(
            model_name='subscriptionrequest',
            name='recurring_start_date',
            field=models.DateField(default=datetime.date(1970, 1, 1), help_text='Date on which to commence charging recurring_amount'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='response',
            name='decision',
            field=models.CharField(blank=True, choices=[('ACCEPT', 'ACCEPT'), ('REVIEW', 'REVIEW'), ('DECLINE', 'DECLINE'), ('ERROR', 'ERROR'), ('CANCEL', 'CANCEL')], max_length=7, null=True),
        ),
        migrations.AlterField(
            model_name='response',
            name='encryption_key_id',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='response',
            name='full_response',
            field=models.BinaryField(help_text='The full response, encrypted, in case we ever need it.'),
        ),
        migrations.AlterField(
            model_name='response',
            name='message',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='response',
            name='reason_code',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='HistoricalSubscriptionAgreement',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('customer_pk', models.IntegerField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Rejected', 'Rejected'), ('Aborted', 'Aborted'), ('Canceled', 'Canceled'), ('Completed', 'Completed'), ('Current', 'Current'), ('Hold', 'Hold'), ('Superseded', 'Superseded')], max_length=20)),
                ('updated_date', models.DateTimeField(blank=True, editable=False)),
                ('cancellation_requested', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('created_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False)),
                ('paid_through', models.DateTimeField(blank=True, null=True)),
                ('customer_type', models.CharField(choices=[('Registrar', 'Registrar'), ('Individual', 'Individual')], default='Registrar', max_length=20)),
                ('current_frequency', models.CharField(blank=True, max_length=20, null=True)),
                ('current_link_limit', models.CharField(blank=True, max_length=20, null=True)),
                ('current_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True)),
                ('current_link_limit_effective_timestamp', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'get_latest_by': 'history_date',
                'verbose_name': 'historical subscription agreement',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        # TWEAK:
        #
        # PurchaseRequest and PurchaseRequestResponse were actually added later in the project's history.
        # PurchaseRequests and SubscriptionAgreements both have a field `reference_number`, whose value
        # must be unique across both models, which is achieved by their default callable, perma_payments.models.generate_reference_number
        # New development databases attempting to run all migrations sequentially would fail at 0006, which
        # adds the default to SubscriptionAgreement, before PurchaseRequest has been created.
        # Hence, this squash and tweak: we create PurchaseRequest and PurchaseRequestResponse tables here in
        # the sequence, instead of at the end.
        migrations.CreateModel(
            name='PurchaseRequest',
            fields=[
                ('outgoingtransaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.OutgoingTransaction')),
                ('customer_pk', models.IntegerField()),
                ('customer_type', models.CharField(choices=[('Registrar', 'Registrar'), ('Individual', 'Individual')], max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('locale', models.CharField(default='en-us', max_length=5)),
                ('payment_method', models.CharField(default='card', max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount to be charged immediately', max_digits=19)),
                ('transaction_type', models.CharField(default='sale', max_length=30)),
                ('reference_number', models.CharField(default=perma_payments.models.generate_reference_number, help_text="Unique ID for this purchase. Called 'Merchant Reference Number' in CyberSource Business Center.", max_length=32)),
                ('link_quantity', models.PositiveIntegerField()),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('perma_payments.outgoingtransaction', models.Model),
        ),
        migrations.CreateModel(
            name='PurchaseRequestResponse',
            fields=[
                ('response_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.Response')),
                ('inform_perma', models.BooleanField(default=False, help_text='Should Perma be informed that this customer has successfully purchased more links?')),
                ('perma_acknowleged_at', models.DateTimeField(blank=True, null=True)),
                ('related_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_request_response', to='perma_payments.PurchaseRequest')),
            ],
            options={
                'manager_inheritance_from_future': True,
            },
            bases=('perma_payments.response',),
        ),
        # END TWEAK
        migrations.AlterField(
            model_name='subscriptionrequest',
            name='reference_number',
            field=models.CharField(default=perma_payments.models.generate_reference_number, help_text="Unqiue ID for this subscription. Subsequent charges, automatically made by CyberSource on the recurring schedule, will all be associated with this reference number. Called 'Merchant Reference Number' in CyberSource Business Center.", max_length=32),
        ),
        migrations.AlterField(
            model_name='outgoingtransaction',
            name='request_datetime',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='subscriptionrequest',
            name='recurring_frequency',
            field=models.CharField(choices=[('weekly', 'weekly'), ('bi-weekly', 'bi-weekly (every 2 weeks)'), ('quad-weekly', 'quad-weekly (every 4 weeks)'), ('monthly', 'monthly'), ('semi-monthly', 'semi-monthly (1st and 15th of each month)'), ('quarterly', 'quarterly'), ('semi-annually', 'semi-annually (twice every year)'), ('annually', 'annually')], max_length=20),
        ),
        migrations.AlterField(
            model_name='updaterequest',
            name='subscription_agreement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='update_requests', to='perma_payments.SubscriptionAgreement'),
        ),
        migrations.RenameField(
            model_name='subscriptionagreement',
            old_name='status_updated',
            new_name='updated_date',
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='created_date',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='paid_through',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='subscriptionagreement',
            name='status',
            field=models.CharField(choices=[('Pending', 'Pending'), ('Rejected', 'Rejected'), ('Aborted', 'Aborted'), ('Canceled', 'Canceled'), ('Completed', 'Completed'), ('Current', 'Current'), ('Hold', 'Hold'), ('Superseded', 'Superseded')], max_length=20),
        ),
        migrations.AlterField(
            model_name='subscriptionrequest',
            name='reference_number',
            field=models.CharField(default=perma_payments.models.generate_reference_number, help_text="Unique ID for this subscription. Subsequent charges, automatically made by CyberSource on the recurring schedule, will all be associated with this reference number. Called 'Merchant Reference Number' in CyberSource Business Center.", max_length=32),
        ),
        migrations.RenameField(
            model_name='subscriptionagreement',
            old_name='registrar',
            new_name='customer_pk',
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='customer_type',
            field=models.CharField(choices=[('Registrar', 'Registrar'), ('Individual', 'Individual')], default='Registrar', max_length=20),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='ChangeRequest',
            fields=[
                ('outgoingtransaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.OutgoingTransaction')),
                ('link_limit', models.CharField(help_text='For internal use only: link limit associated with the subscription', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Amount to be charged immediately', max_digits=19)),
                ('recurring_amount', models.DecimalField(decimal_places=2, help_text='Amount to be charged repeatedly, beginning on recurring_start_date', max_digits=19)),
                ('recurring_start_date', models.DateField(help_text='Date on which to commence charging recurring_amount')),
                ('recurring_frequency', models.CharField(choices=[('weekly', 'weekly'), ('bi-weekly', 'bi-weekly (every 2 weeks)'), ('quad-weekly', 'quad-weekly (every 4 weeks)'), ('monthly', 'monthly'), ('semi-monthly', 'semi-monthly (1st and 15th of each month)'), ('quarterly', 'quarterly'), ('semi-annually', 'semi-annually (twice every year)'), ('annually', 'annually')], max_length=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('locale', models.CharField(default='en-us', max_length=5)),
                ('payment_method', models.CharField(default='card', max_length=30)),
                ('transaction_type', models.CharField(default='sale,update_payment_token', max_length=30)),
                ('subscription_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_requests', to='perma_payments.SubscriptionAgreement')),
            ],
            options={
                'abstract': False,
            },
            bases=('perma_payments.outgoingtransaction', models.Model),
        ),
        migrations.CreateModel(
            name='ChangeRequestResponse',
            fields=[
                ('response_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='perma_payments.Response')),
                ('related_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='change_request_response', to='perma_payments.ChangeRequest')),
            ],
            options={
                'abstract': False,
            },
            bases=('perma_payments.response',),
        ),
        migrations.AddField(
            model_name='subscriptionrequest',
            name='link_limit',
            field=models.CharField(default='unlimited', help_text='For internal use only: link limit associated with the subscription', max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='current_frequency',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='current_link_limit',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='current_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=19, null=True),
        ),
        migrations.RemoveField(
            model_name='changerequest',
            name='recurring_frequency',
        ),
        migrations.RemoveField(
            model_name='changerequest',
            name='recurring_start_date',
        ),
        migrations.AddField(
            model_name='changerequest',
            name='link_limit_effective_timestamp',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='For internal use only: when Perma should apply the new link limit associated with this purchase'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='subscriptionagreement',
            name='current_link_limit_effective_timestamp',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subscriptionrequest',
            name='link_limit_effective_timestamp',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='For internal use only: when Perma should apply the new link limit associated with this purchase'),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=handle_existing_subscriptions,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
    ]
